apiVersion: v1
kind: Namespace
metadata:
  name: claude-system
---
# ServiceAccount for Claude
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-reader
  namespace: claude-system

---
# ClusterRole with read-only permissions (excluding secrets)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: claude-readonly
rules:
# Core resources (excluding secrets)
- apiGroups: [""]
  resources: 
    - "pods"
    - "services" 
    - "endpoints"
    - "persistentvolumeclaims"
    - "persistentvolumes"
    - "nodes"
    - "namespaces"
    - "configmaps"
    - "events"
  verbs: ["get", "list", "watch"]

# Apps resources
- apiGroups: ["apps"]
  resources:
    - "deployments"
    - "replicasets" 
    - "daemonsets"
    - "statefulsets"
  verbs: ["get", "list", "watch"]

# OpenShift specific resources
- apiGroups: ["apps.openshift.io"]
  resources:
    - "deploymentconfigs"
  verbs: ["get", "list", "watch"]

- apiGroups: ["route.openshift.io"]
  resources:
    - "routes"
  verbs: ["get", "list", "watch"]

- apiGroups: ["image.openshift.io"]
  resources:
    - "images"
    - "imagestreams"
  verbs: ["get", "list", "watch"]

# Networking
- apiGroups: ["networking.k8s.io"]
  resources:
    - "ingresses"
    - "networkpolicies"
  verbs: ["get", "list", "watch"]

# Metrics
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

# Explicitly exclude secrets - no access at all
# (OpenShift will deny by default, but being explicit)

---
# ClusterRoleBinding to grant permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: claude-readonly-binding
subjects:
- kind: ServiceAccount
  name: claude-reader
  namespace: claude-system
roleRef:
  kind: ClusterRole
  name: claude-readonly
  apiGroup: rbac.authorization.k8s.io

---
# Deployment with OpenShift security context
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude
  namespace: claude-system
  labels:
    app: claude
spec:
  replicas: 1
  selector:
    matchLabels:
      app: claude
  template:
    metadata:
      labels:
        app: claude
    spec:
      serviceAccountName: claude-reader
      
      # OpenShift will assign a random UID automatically
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: claude
        image: ghcr.io/alfredtm/claudetainer/claude-cli:latest
        imagePullPolicy: Always
        
        # Keep container running - use args instead of command to preserve entrypoint
        args: ["sleep", "infinity"]
        
        # OpenShift security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Allow writes for CLI usage
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        
        # Resource limits
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi" 
            cpu: "500m"
        
        # No ports needed for CLI container
        # Enable stdin/tty for interactive operations
        stdin: true
        tty: true
        
        # Volume mounts for writable areas
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: home
          mountPath: /home/claude-user  # Writable home directory for CLI
        
        # Environment for CLI usage
        env:
        - name: HOME
          value: "/home/claude-user"
        - name: USER_NAME
          value: "claude-user"
        
        # Since this is a CLI container, we use exec probes instead
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "which claude && test -x /usr/local/bin/kubectl || exit 1"
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "which claude && test -x /usr/local/bin/kubectl || exit 1"
          initialDelaySeconds: 5
          periodSeconds: 10
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: home
        emptyDir: {}  # Writable home directory